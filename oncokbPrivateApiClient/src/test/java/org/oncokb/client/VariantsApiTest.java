/*
 * OncoKB Private APIs
 * These endpoints are for private use only.
 *
 * OpenAPI spec version: v1.1.0
 * Contact: contact@oncokb.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.oncokb.client;

import org.oncokb.ApiException;
import org.oncokb.client.ActionableGene;
import org.oncokb.client.Alteration;
import org.oncokb.client.AnnotatedVariant;
import org.oncokb.client.VariantSearchQuery;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VariantsApi
 */
@Ignore
public class VariantsApiTest {

    private final VariantsApi api = new VariantsApi();

    
    /**
     * utilsAllActionableVariantsGet
     *
     * Get All Actionable Variants.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void utilsAllActionableVariantsGetUsingGETTest() throws ApiException {
        String version = null;
        List<ActionableGene> response = api.utilsAllActionableVariantsGetUsingGET(version);

        // TODO: test validations
    }
    
    /**
     * utilsAllActionableVariantsTxtGet
     *
     * Get All Actionable Variants in text file.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void utilsAllActionableVariantsTxtGetUsingGETTest() throws ApiException {
        String version = null;
        String response = api.utilsAllActionableVariantsTxtGetUsingGET(version);

        // TODO: test validations
    }
    
    /**
     * utilsAllAnnotatedVariantsGet
     *
     * Get All Annotated Variants.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void utilsAllAnnotatedVariantsGetUsingGETTest() throws ApiException {
        String version = null;
        List<AnnotatedVariant> response = api.utilsAllAnnotatedVariantsGetUsingGET(version);

        // TODO: test validations
    }
    
    /**
     * utilsAllAnnotatedVariantsTxtGet
     *
     * Get All Annotated Variants in text file.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void utilsAllAnnotatedVariantsTxtGetUsingGETTest() throws ApiException {
        String version = null;
        String response = api.utilsAllAnnotatedVariantsTxtGetUsingGET(version);

        // TODO: test validations
    }
    
    /**
     * variantsGet
     *
     * Get all annotated variants.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void variantsGetUsingGETTest() throws ApiException {
        String fields = null;
        List<Alteration> response = api.variantsGetUsingGET(fields);

        // TODO: test validations
    }
    
    /**
     * variantsLookupGet
     *
     * Search for variants.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void variantsLookupGetUsingGETTest() throws ApiException {
        Integer entrezGeneId = null;
        String hugoSymbol = null;
        String variant = null;
        String variantType = null;
        String consequence = null;
        Integer proteinStart = null;
        Integer proteinEnd = null;
        String hgvs = null;
        String fields = null;
        List<Alteration> response = api.variantsLookupGetUsingGET(entrezGeneId, hugoSymbol, variant, variantType, consequence, proteinStart, proteinEnd, hgvs, fields);

        // TODO: test validations
    }
    
    /**
     * variantsLookupPost
     *
     * Search for variants.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void variantsLookupPostUsingPOSTTest() throws ApiException {
        List<VariantSearchQuery> body = null;
        String fields = null;
        List<List<Object>> response = api.variantsLookupPostUsingPOST(body, fields);

        // TODO: test validations
    }
    
}
