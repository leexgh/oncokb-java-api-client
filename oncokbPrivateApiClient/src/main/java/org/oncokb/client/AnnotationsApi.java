/*
 * OncoKB Private APIs
 * These endpoints are for private use only.
 *
 * OpenAPI spec version: v1.1.0
 * Contact: contact@oncokb.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.oncokb.client;

import org.oncokb.ApiCallback;
import org.oncokb.ApiClient;
import org.oncokb.ApiException;
import org.oncokb.ApiResponse;
import org.oncokb.Configuration;
import org.oncokb.Pair;
import org.oncokb.ProgressRequestBody;
import org.oncokb.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.oncokb.client.AnnotateCopyNumberAlterationQuery;
import org.oncokb.client.AnnotateMutationByGenomicChangeQuery;
import org.oncokb.client.AnnotateMutationByHGVSgQuery;
import org.oncokb.client.AnnotateMutationByProteinChangeQuery;
import org.oncokb.client.AnnotateStructuralVariantQuery;
import org.oncokb.client.IndicatorQueryResp;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AnnotationsApi {
    private ApiClient apiClient;

    public AnnotationsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AnnotationsApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for annotateCopyNumberAlterationsGetUsingGET
     * @param copyNameAlterationType Copy number alteration type (required)
     * @param hugoSymbol The gene symbol used in Human Genome Organisation. Example: BRAF (optional)
     * @param entrezGeneId The entrez gene ID. (Higher priority than hugoSymbol). Example: 673 (optional)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call annotateCopyNumberAlterationsGetUsingGETCall(String copyNameAlterationType, String hugoSymbol, Integer entrezGeneId, String tumorType, String evidenceType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/annotate/copyNumberAlterations";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (hugoSymbol != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("hugoSymbol", hugoSymbol));
        if (entrezGeneId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("entrezGeneId", entrezGeneId));
        if (copyNameAlterationType != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("copyNameAlterationType", copyNameAlterationType));
        if (tumorType != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("tumorType", tumorType));
        if (evidenceType != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("evidenceType", evidenceType));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call annotateCopyNumberAlterationsGetUsingGETValidateBeforeCall(String copyNameAlterationType, String hugoSymbol, Integer entrezGeneId, String tumorType, String evidenceType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'copyNameAlterationType' is set
        if (copyNameAlterationType == null) {
            throw new ApiException("Missing the required parameter 'copyNameAlterationType' when calling annotateCopyNumberAlterationsGetUsingGET(Async)");
        }
        

        com.squareup.okhttp.Call call = annotateCopyNumberAlterationsGetUsingGETCall(copyNameAlterationType, hugoSymbol, entrezGeneId, tumorType, evidenceType, progressListener, progressRequestListener);
        return call;

    }

    /**
     * annotateCopyNumberAlterationsGet
     * Annotate copy number alteration.
     * @param copyNameAlterationType Copy number alteration type (required)
     * @param hugoSymbol The gene symbol used in Human Genome Organisation. Example: BRAF (optional)
     * @param entrezGeneId The entrez gene ID. (Higher priority than hugoSymbol). Example: 673 (optional)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @return IndicatorQueryResp
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public IndicatorQueryResp annotateCopyNumberAlterationsGetUsingGET(String copyNameAlterationType, String hugoSymbol, Integer entrezGeneId, String tumorType, String evidenceType) throws ApiException {
        ApiResponse<IndicatorQueryResp> resp = annotateCopyNumberAlterationsGetUsingGETWithHttpInfo(copyNameAlterationType, hugoSymbol, entrezGeneId, tumorType, evidenceType);
        return resp.getData();
    }

    /**
     * annotateCopyNumberAlterationsGet
     * Annotate copy number alteration.
     * @param copyNameAlterationType Copy number alteration type (required)
     * @param hugoSymbol The gene symbol used in Human Genome Organisation. Example: BRAF (optional)
     * @param entrezGeneId The entrez gene ID. (Higher priority than hugoSymbol). Example: 673 (optional)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @return ApiResponse&lt;IndicatorQueryResp&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<IndicatorQueryResp> annotateCopyNumberAlterationsGetUsingGETWithHttpInfo(String copyNameAlterationType, String hugoSymbol, Integer entrezGeneId, String tumorType, String evidenceType) throws ApiException {
        com.squareup.okhttp.Call call = annotateCopyNumberAlterationsGetUsingGETValidateBeforeCall(copyNameAlterationType, hugoSymbol, entrezGeneId, tumorType, evidenceType, null, null);
        Type localVarReturnType = new TypeToken<IndicatorQueryResp>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * annotateCopyNumberAlterationsGet (asynchronously)
     * Annotate copy number alteration.
     * @param copyNameAlterationType Copy number alteration type (required)
     * @param hugoSymbol The gene symbol used in Human Genome Organisation. Example: BRAF (optional)
     * @param entrezGeneId The entrez gene ID. (Higher priority than hugoSymbol). Example: 673 (optional)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call annotateCopyNumberAlterationsGetUsingGETAsync(String copyNameAlterationType, String hugoSymbol, Integer entrezGeneId, String tumorType, String evidenceType, final ApiCallback<IndicatorQueryResp> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = annotateCopyNumberAlterationsGetUsingGETValidateBeforeCall(copyNameAlterationType, hugoSymbol, entrezGeneId, tumorType, evidenceType, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<IndicatorQueryResp>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for annotateCopyNumberAlterationsPostUsingPOST
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call annotateCopyNumberAlterationsPostUsingPOSTCall(List<AnnotateCopyNumberAlterationQuery> body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/annotate/copyNumberAlterations";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call annotateCopyNumberAlterationsPostUsingPOSTValidateBeforeCall(List<AnnotateCopyNumberAlterationQuery> body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling annotateCopyNumberAlterationsPostUsingPOST(Async)");
        }
        

        com.squareup.okhttp.Call call = annotateCopyNumberAlterationsPostUsingPOSTCall(body, progressListener, progressRequestListener);
        return call;

    }

    /**
     * annotateCopyNumberAlterationsPost
     * Annotate copy number alterations.
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @return List&lt;IndicatorQueryResp&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<IndicatorQueryResp> annotateCopyNumberAlterationsPostUsingPOST(List<AnnotateCopyNumberAlterationQuery> body) throws ApiException {
        ApiResponse<List<IndicatorQueryResp>> resp = annotateCopyNumberAlterationsPostUsingPOSTWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * annotateCopyNumberAlterationsPost
     * Annotate copy number alterations.
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @return ApiResponse&lt;List&lt;IndicatorQueryResp&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<IndicatorQueryResp>> annotateCopyNumberAlterationsPostUsingPOSTWithHttpInfo(List<AnnotateCopyNumberAlterationQuery> body) throws ApiException {
        com.squareup.okhttp.Call call = annotateCopyNumberAlterationsPostUsingPOSTValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<List<IndicatorQueryResp>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * annotateCopyNumberAlterationsPost (asynchronously)
     * Annotate copy number alterations.
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call annotateCopyNumberAlterationsPostUsingPOSTAsync(List<AnnotateCopyNumberAlterationQuery> body, final ApiCallback<List<IndicatorQueryResp>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = annotateCopyNumberAlterationsPostUsingPOSTValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<IndicatorQueryResp>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for annotateMutationsByGenomicChangeGetUsingGET
     * @param genomicLocation Genomic location. Example: 7,140453136,140453136,A,T (required)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call annotateMutationsByGenomicChangeGetUsingGETCall(String genomicLocation, String tumorType, String evidenceType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/annotate/mutations/byGenomicChange";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (genomicLocation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("genomicLocation", genomicLocation));
        if (tumorType != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("tumorType", tumorType));
        if (evidenceType != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("evidenceType", evidenceType));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call annotateMutationsByGenomicChangeGetUsingGETValidateBeforeCall(String genomicLocation, String tumorType, String evidenceType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'genomicLocation' is set
        if (genomicLocation == null) {
            throw new ApiException("Missing the required parameter 'genomicLocation' when calling annotateMutationsByGenomicChangeGetUsingGET(Async)");
        }
        

        com.squareup.okhttp.Call call = annotateMutationsByGenomicChangeGetUsingGETCall(genomicLocation, tumorType, evidenceType, progressListener, progressRequestListener);
        return call;

    }

    /**
     * annotateMutationsByGenomicChangeGet
     * Annotate mutation by genomic change.
     * @param genomicLocation Genomic location. Example: 7,140453136,140453136,A,T (required)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @return IndicatorQueryResp
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public IndicatorQueryResp annotateMutationsByGenomicChangeGetUsingGET(String genomicLocation, String tumorType, String evidenceType) throws ApiException {
        ApiResponse<IndicatorQueryResp> resp = annotateMutationsByGenomicChangeGetUsingGETWithHttpInfo(genomicLocation, tumorType, evidenceType);
        return resp.getData();
    }

    /**
     * annotateMutationsByGenomicChangeGet
     * Annotate mutation by genomic change.
     * @param genomicLocation Genomic location. Example: 7,140453136,140453136,A,T (required)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @return ApiResponse&lt;IndicatorQueryResp&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<IndicatorQueryResp> annotateMutationsByGenomicChangeGetUsingGETWithHttpInfo(String genomicLocation, String tumorType, String evidenceType) throws ApiException {
        com.squareup.okhttp.Call call = annotateMutationsByGenomicChangeGetUsingGETValidateBeforeCall(genomicLocation, tumorType, evidenceType, null, null);
        Type localVarReturnType = new TypeToken<IndicatorQueryResp>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * annotateMutationsByGenomicChangeGet (asynchronously)
     * Annotate mutation by genomic change.
     * @param genomicLocation Genomic location. Example: 7,140453136,140453136,A,T (required)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call annotateMutationsByGenomicChangeGetUsingGETAsync(String genomicLocation, String tumorType, String evidenceType, final ApiCallback<IndicatorQueryResp> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = annotateMutationsByGenomicChangeGetUsingGETValidateBeforeCall(genomicLocation, tumorType, evidenceType, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<IndicatorQueryResp>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for annotateMutationsByGenomicChangePostUsingPOST
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call annotateMutationsByGenomicChangePostUsingPOSTCall(List<AnnotateMutationByGenomicChangeQuery> body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/annotate/mutations/byGenomicChange";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call annotateMutationsByGenomicChangePostUsingPOSTValidateBeforeCall(List<AnnotateMutationByGenomicChangeQuery> body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling annotateMutationsByGenomicChangePostUsingPOST(Async)");
        }
        

        com.squareup.okhttp.Call call = annotateMutationsByGenomicChangePostUsingPOSTCall(body, progressListener, progressRequestListener);
        return call;

    }

    /**
     * annotateMutationsByGenomicChangePost
     * Annotate mutations by genomic change.
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @return List&lt;IndicatorQueryResp&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<IndicatorQueryResp> annotateMutationsByGenomicChangePostUsingPOST(List<AnnotateMutationByGenomicChangeQuery> body) throws ApiException {
        ApiResponse<List<IndicatorQueryResp>> resp = annotateMutationsByGenomicChangePostUsingPOSTWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * annotateMutationsByGenomicChangePost
     * Annotate mutations by genomic change.
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @return ApiResponse&lt;List&lt;IndicatorQueryResp&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<IndicatorQueryResp>> annotateMutationsByGenomicChangePostUsingPOSTWithHttpInfo(List<AnnotateMutationByGenomicChangeQuery> body) throws ApiException {
        com.squareup.okhttp.Call call = annotateMutationsByGenomicChangePostUsingPOSTValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<List<IndicatorQueryResp>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * annotateMutationsByGenomicChangePost (asynchronously)
     * Annotate mutations by genomic change.
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call annotateMutationsByGenomicChangePostUsingPOSTAsync(List<AnnotateMutationByGenomicChangeQuery> body, final ApiCallback<List<IndicatorQueryResp>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = annotateMutationsByGenomicChangePostUsingPOSTValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<IndicatorQueryResp>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for annotateMutationsByHGVSgGetUsingGET
     * @param hgvsg HGVS genomic format. Example: 7:g.140453136A&gt;T (required)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call annotateMutationsByHGVSgGetUsingGETCall(String hgvsg, String tumorType, String evidenceType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/annotate/mutations/byHGVSg";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (hgvsg != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("hgvsg", hgvsg));
        if (tumorType != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("tumorType", tumorType));
        if (evidenceType != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("evidenceType", evidenceType));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call annotateMutationsByHGVSgGetUsingGETValidateBeforeCall(String hgvsg, String tumorType, String evidenceType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'hgvsg' is set
        if (hgvsg == null) {
            throw new ApiException("Missing the required parameter 'hgvsg' when calling annotateMutationsByHGVSgGetUsingGET(Async)");
        }
        

        com.squareup.okhttp.Call call = annotateMutationsByHGVSgGetUsingGETCall(hgvsg, tumorType, evidenceType, progressListener, progressRequestListener);
        return call;

    }

    /**
     * annotateMutationsByHGVSgGet
     * Annotate mutation by HGVSg.
     * @param hgvsg HGVS genomic format. Example: 7:g.140453136A&gt;T (required)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @return IndicatorQueryResp
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public IndicatorQueryResp annotateMutationsByHGVSgGetUsingGET(String hgvsg, String tumorType, String evidenceType) throws ApiException {
        ApiResponse<IndicatorQueryResp> resp = annotateMutationsByHGVSgGetUsingGETWithHttpInfo(hgvsg, tumorType, evidenceType);
        return resp.getData();
    }

    /**
     * annotateMutationsByHGVSgGet
     * Annotate mutation by HGVSg.
     * @param hgvsg HGVS genomic format. Example: 7:g.140453136A&gt;T (required)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @return ApiResponse&lt;IndicatorQueryResp&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<IndicatorQueryResp> annotateMutationsByHGVSgGetUsingGETWithHttpInfo(String hgvsg, String tumorType, String evidenceType) throws ApiException {
        com.squareup.okhttp.Call call = annotateMutationsByHGVSgGetUsingGETValidateBeforeCall(hgvsg, tumorType, evidenceType, null, null);
        Type localVarReturnType = new TypeToken<IndicatorQueryResp>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * annotateMutationsByHGVSgGet (asynchronously)
     * Annotate mutation by HGVSg.
     * @param hgvsg HGVS genomic format. Example: 7:g.140453136A&gt;T (required)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call annotateMutationsByHGVSgGetUsingGETAsync(String hgvsg, String tumorType, String evidenceType, final ApiCallback<IndicatorQueryResp> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = annotateMutationsByHGVSgGetUsingGETValidateBeforeCall(hgvsg, tumorType, evidenceType, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<IndicatorQueryResp>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for annotateMutationsByHGVSgPostUsingPOST
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call annotateMutationsByHGVSgPostUsingPOSTCall(List<AnnotateMutationByHGVSgQuery> body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/annotate/mutations/byHGVSg";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call annotateMutationsByHGVSgPostUsingPOSTValidateBeforeCall(List<AnnotateMutationByHGVSgQuery> body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling annotateMutationsByHGVSgPostUsingPOST(Async)");
        }
        

        com.squareup.okhttp.Call call = annotateMutationsByHGVSgPostUsingPOSTCall(body, progressListener, progressRequestListener);
        return call;

    }

    /**
     * annotateMutationsByHGVSgPost
     * Annotate mutations by genomic change.
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @return List&lt;IndicatorQueryResp&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<IndicatorQueryResp> annotateMutationsByHGVSgPostUsingPOST(List<AnnotateMutationByHGVSgQuery> body) throws ApiException {
        ApiResponse<List<IndicatorQueryResp>> resp = annotateMutationsByHGVSgPostUsingPOSTWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * annotateMutationsByHGVSgPost
     * Annotate mutations by genomic change.
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @return ApiResponse&lt;List&lt;IndicatorQueryResp&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<IndicatorQueryResp>> annotateMutationsByHGVSgPostUsingPOSTWithHttpInfo(List<AnnotateMutationByHGVSgQuery> body) throws ApiException {
        com.squareup.okhttp.Call call = annotateMutationsByHGVSgPostUsingPOSTValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<List<IndicatorQueryResp>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * annotateMutationsByHGVSgPost (asynchronously)
     * Annotate mutations by genomic change.
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call annotateMutationsByHGVSgPostUsingPOSTAsync(List<AnnotateMutationByHGVSgQuery> body, final ApiCallback<List<IndicatorQueryResp>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = annotateMutationsByHGVSgPostUsingPOSTValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<IndicatorQueryResp>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for annotateMutationsByProteinChangeGetUsingGET
     * @param hugoSymbol The gene symbol used in Human Genome Organisation. Example: BRAF (optional)
     * @param entrezGeneId The entrez gene ID. (Higher priority than hugoSymbol). Example: 673 (optional)
     * @param alteration Protein Change. Example: V600E (optional)
     * @param consequence Consequence. Exacmple: missense_variant (optional)
     * @param proteinStart Protein Start. Example: 600 (optional)
     * @param proteinEnd Protein End. Example: 600 (optional)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call annotateMutationsByProteinChangeGetUsingGETCall(String hugoSymbol, Integer entrezGeneId, String alteration, String consequence, Integer proteinStart, Integer proteinEnd, String tumorType, String evidenceType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/annotate/mutations/byProteinChange";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (hugoSymbol != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("hugoSymbol", hugoSymbol));
        if (entrezGeneId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("entrezGeneId", entrezGeneId));
        if (alteration != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("alteration", alteration));
        if (consequence != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("consequence", consequence));
        if (proteinStart != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("proteinStart", proteinStart));
        if (proteinEnd != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("proteinEnd", proteinEnd));
        if (tumorType != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("tumorType", tumorType));
        if (evidenceType != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("evidenceType", evidenceType));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call annotateMutationsByProteinChangeGetUsingGETValidateBeforeCall(String hugoSymbol, Integer entrezGeneId, String alteration, String consequence, Integer proteinStart, Integer proteinEnd, String tumorType, String evidenceType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        

        com.squareup.okhttp.Call call = annotateMutationsByProteinChangeGetUsingGETCall(hugoSymbol, entrezGeneId, alteration, consequence, proteinStart, proteinEnd, tumorType, evidenceType, progressListener, progressRequestListener);
        return call;

    }

    /**
     * annotateMutationsByProteinChangeGet
     * Annotate mutation by protein change.
     * @param hugoSymbol The gene symbol used in Human Genome Organisation. Example: BRAF (optional)
     * @param entrezGeneId The entrez gene ID. (Higher priority than hugoSymbol). Example: 673 (optional)
     * @param alteration Protein Change. Example: V600E (optional)
     * @param consequence Consequence. Exacmple: missense_variant (optional)
     * @param proteinStart Protein Start. Example: 600 (optional)
     * @param proteinEnd Protein End. Example: 600 (optional)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @return IndicatorQueryResp
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public IndicatorQueryResp annotateMutationsByProteinChangeGetUsingGET(String hugoSymbol, Integer entrezGeneId, String alteration, String consequence, Integer proteinStart, Integer proteinEnd, String tumorType, String evidenceType) throws ApiException {
        ApiResponse<IndicatorQueryResp> resp = annotateMutationsByProteinChangeGetUsingGETWithHttpInfo(hugoSymbol, entrezGeneId, alteration, consequence, proteinStart, proteinEnd, tumorType, evidenceType);
        return resp.getData();
    }

    /**
     * annotateMutationsByProteinChangeGet
     * Annotate mutation by protein change.
     * @param hugoSymbol The gene symbol used in Human Genome Organisation. Example: BRAF (optional)
     * @param entrezGeneId The entrez gene ID. (Higher priority than hugoSymbol). Example: 673 (optional)
     * @param alteration Protein Change. Example: V600E (optional)
     * @param consequence Consequence. Exacmple: missense_variant (optional)
     * @param proteinStart Protein Start. Example: 600 (optional)
     * @param proteinEnd Protein End. Example: 600 (optional)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @return ApiResponse&lt;IndicatorQueryResp&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<IndicatorQueryResp> annotateMutationsByProteinChangeGetUsingGETWithHttpInfo(String hugoSymbol, Integer entrezGeneId, String alteration, String consequence, Integer proteinStart, Integer proteinEnd, String tumorType, String evidenceType) throws ApiException {
        com.squareup.okhttp.Call call = annotateMutationsByProteinChangeGetUsingGETValidateBeforeCall(hugoSymbol, entrezGeneId, alteration, consequence, proteinStart, proteinEnd, tumorType, evidenceType, null, null);
        Type localVarReturnType = new TypeToken<IndicatorQueryResp>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * annotateMutationsByProteinChangeGet (asynchronously)
     * Annotate mutation by protein change.
     * @param hugoSymbol The gene symbol used in Human Genome Organisation. Example: BRAF (optional)
     * @param entrezGeneId The entrez gene ID. (Higher priority than hugoSymbol). Example: 673 (optional)
     * @param alteration Protein Change. Example: V600E (optional)
     * @param consequence Consequence. Exacmple: missense_variant (optional)
     * @param proteinStart Protein Start. Example: 600 (optional)
     * @param proteinEnd Protein End. Example: 600 (optional)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call annotateMutationsByProteinChangeGetUsingGETAsync(String hugoSymbol, Integer entrezGeneId, String alteration, String consequence, Integer proteinStart, Integer proteinEnd, String tumorType, String evidenceType, final ApiCallback<IndicatorQueryResp> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = annotateMutationsByProteinChangeGetUsingGETValidateBeforeCall(hugoSymbol, entrezGeneId, alteration, consequence, proteinStart, proteinEnd, tumorType, evidenceType, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<IndicatorQueryResp>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for annotateMutationsByProteinChangePostUsingPOST
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call annotateMutationsByProteinChangePostUsingPOSTCall(List<AnnotateMutationByProteinChangeQuery> body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/annotate/mutations/byProteinChange";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call annotateMutationsByProteinChangePostUsingPOSTValidateBeforeCall(List<AnnotateMutationByProteinChangeQuery> body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling annotateMutationsByProteinChangePostUsingPOST(Async)");
        }
        

        com.squareup.okhttp.Call call = annotateMutationsByProteinChangePostUsingPOSTCall(body, progressListener, progressRequestListener);
        return call;

    }

    /**
     * annotateMutationsByProteinChangePost
     * Annotate mutations by protein change.
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @return List&lt;IndicatorQueryResp&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<IndicatorQueryResp> annotateMutationsByProteinChangePostUsingPOST(List<AnnotateMutationByProteinChangeQuery> body) throws ApiException {
        ApiResponse<List<IndicatorQueryResp>> resp = annotateMutationsByProteinChangePostUsingPOSTWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * annotateMutationsByProteinChangePost
     * Annotate mutations by protein change.
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @return ApiResponse&lt;List&lt;IndicatorQueryResp&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<IndicatorQueryResp>> annotateMutationsByProteinChangePostUsingPOSTWithHttpInfo(List<AnnotateMutationByProteinChangeQuery> body) throws ApiException {
        com.squareup.okhttp.Call call = annotateMutationsByProteinChangePostUsingPOSTValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<List<IndicatorQueryResp>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * annotateMutationsByProteinChangePost (asynchronously)
     * Annotate mutations by protein change.
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call annotateMutationsByProteinChangePostUsingPOSTAsync(List<AnnotateMutationByProteinChangeQuery> body, final ApiCallback<List<IndicatorQueryResp>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = annotateMutationsByProteinChangePostUsingPOSTValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<IndicatorQueryResp>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for annotateStructuralVariantsGetUsingGET
     * @param structuralVariantType Structural variant type (required)
     * @param isFunctionalFusion Whether is functional fusion (required)
     * @param hugoSymbolA The gene symbol A used in Human Genome Organisation. Example: ABL1 (optional)
     * @param entrezGeneIdA The entrez gene ID A. (Higher priority than hugoSymbolA) Example: 25 (optional)
     * @param hugoSymbolB The gene symbol B used in Human Genome Organisation.Example: BCR  (optional)
     * @param entrezGeneIdB The entrez gene ID B. (Higher priority than hugoSymbolB) Example: 613 (optional)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call annotateStructuralVariantsGetUsingGETCall(String structuralVariantType, Boolean isFunctionalFusion, String hugoSymbolA, Integer entrezGeneIdA, String hugoSymbolB, Integer entrezGeneIdB, String tumorType, String evidenceType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/annotate/structuralVariants";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (hugoSymbolA != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("hugoSymbolA", hugoSymbolA));
        if (entrezGeneIdA != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("entrezGeneIdA", entrezGeneIdA));
        if (hugoSymbolB != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("hugoSymbolB", hugoSymbolB));
        if (entrezGeneIdB != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("entrezGeneIdB", entrezGeneIdB));
        if (structuralVariantType != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("structuralVariantType", structuralVariantType));
        if (isFunctionalFusion != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("isFunctionalFusion", isFunctionalFusion));
        if (tumorType != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("tumorType", tumorType));
        if (evidenceType != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("evidenceType", evidenceType));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call annotateStructuralVariantsGetUsingGETValidateBeforeCall(String structuralVariantType, Boolean isFunctionalFusion, String hugoSymbolA, Integer entrezGeneIdA, String hugoSymbolB, Integer entrezGeneIdB, String tumorType, String evidenceType, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'structuralVariantType' is set
        if (structuralVariantType == null) {
            throw new ApiException("Missing the required parameter 'structuralVariantType' when calling annotateStructuralVariantsGetUsingGET(Async)");
        }
        
        // verify the required parameter 'isFunctionalFusion' is set
        if (isFunctionalFusion == null) {
            throw new ApiException("Missing the required parameter 'isFunctionalFusion' when calling annotateStructuralVariantsGetUsingGET(Async)");
        }
        

        com.squareup.okhttp.Call call = annotateStructuralVariantsGetUsingGETCall(structuralVariantType, isFunctionalFusion, hugoSymbolA, entrezGeneIdA, hugoSymbolB, entrezGeneIdB, tumorType, evidenceType, progressListener, progressRequestListener);
        return call;

    }

    /**
     * annotateStructuralVariantsGet
     * Annotate structural variant.
     * @param structuralVariantType Structural variant type (required)
     * @param isFunctionalFusion Whether is functional fusion (required)
     * @param hugoSymbolA The gene symbol A used in Human Genome Organisation. Example: ABL1 (optional)
     * @param entrezGeneIdA The entrez gene ID A. (Higher priority than hugoSymbolA) Example: 25 (optional)
     * @param hugoSymbolB The gene symbol B used in Human Genome Organisation.Example: BCR  (optional)
     * @param entrezGeneIdB The entrez gene ID B. (Higher priority than hugoSymbolB) Example: 613 (optional)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @return IndicatorQueryResp
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public IndicatorQueryResp annotateStructuralVariantsGetUsingGET(String structuralVariantType, Boolean isFunctionalFusion, String hugoSymbolA, Integer entrezGeneIdA, String hugoSymbolB, Integer entrezGeneIdB, String tumorType, String evidenceType) throws ApiException {
        ApiResponse<IndicatorQueryResp> resp = annotateStructuralVariantsGetUsingGETWithHttpInfo(structuralVariantType, isFunctionalFusion, hugoSymbolA, entrezGeneIdA, hugoSymbolB, entrezGeneIdB, tumorType, evidenceType);
        return resp.getData();
    }

    /**
     * annotateStructuralVariantsGet
     * Annotate structural variant.
     * @param structuralVariantType Structural variant type (required)
     * @param isFunctionalFusion Whether is functional fusion (required)
     * @param hugoSymbolA The gene symbol A used in Human Genome Organisation. Example: ABL1 (optional)
     * @param entrezGeneIdA The entrez gene ID A. (Higher priority than hugoSymbolA) Example: 25 (optional)
     * @param hugoSymbolB The gene symbol B used in Human Genome Organisation.Example: BCR  (optional)
     * @param entrezGeneIdB The entrez gene ID B. (Higher priority than hugoSymbolB) Example: 613 (optional)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @return ApiResponse&lt;IndicatorQueryResp&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<IndicatorQueryResp> annotateStructuralVariantsGetUsingGETWithHttpInfo(String structuralVariantType, Boolean isFunctionalFusion, String hugoSymbolA, Integer entrezGeneIdA, String hugoSymbolB, Integer entrezGeneIdB, String tumorType, String evidenceType) throws ApiException {
        com.squareup.okhttp.Call call = annotateStructuralVariantsGetUsingGETValidateBeforeCall(structuralVariantType, isFunctionalFusion, hugoSymbolA, entrezGeneIdA, hugoSymbolB, entrezGeneIdB, tumorType, evidenceType, null, null);
        Type localVarReturnType = new TypeToken<IndicatorQueryResp>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * annotateStructuralVariantsGet (asynchronously)
     * Annotate structural variant.
     * @param structuralVariantType Structural variant type (required)
     * @param isFunctionalFusion Whether is functional fusion (required)
     * @param hugoSymbolA The gene symbol A used in Human Genome Organisation. Example: ABL1 (optional)
     * @param entrezGeneIdA The entrez gene ID A. (Higher priority than hugoSymbolA) Example: 25 (optional)
     * @param hugoSymbolB The gene symbol B used in Human Genome Organisation.Example: BCR  (optional)
     * @param entrezGeneIdB The entrez gene ID B. (Higher priority than hugoSymbolB) Example: 613 (optional)
     * @param tumorType OncoTree(http://oncotree.mskcc.org) tumor type name. The field supports OncoTree Code, OncoTree Name and OncoTree Main type. Example: Melanoma (optional)
     * @param evidenceType Evidence type to compute. This could help to improve the performance if you only look for sub-content. Example: ONCOGENIC. All available evidence type are GENE_SUMMARY, MUTATION_SUMMARY, TUMOR_TYPE_SUMMARY, PROGNOSTIC_SUMMARY, DIAGNOSTIC_SUMMARY, ONCOGENIC, MUTATION_EFFECT, PROGNOSTIC_IMPLICATION, DIAGNOSTIC_IMPLICATION, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY, STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY, INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE. For multiple evidence types query, use &#39;,&#39; as separator. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call annotateStructuralVariantsGetUsingGETAsync(String structuralVariantType, Boolean isFunctionalFusion, String hugoSymbolA, Integer entrezGeneIdA, String hugoSymbolB, Integer entrezGeneIdB, String tumorType, String evidenceType, final ApiCallback<IndicatorQueryResp> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = annotateStructuralVariantsGetUsingGETValidateBeforeCall(structuralVariantType, isFunctionalFusion, hugoSymbolA, entrezGeneIdA, hugoSymbolB, entrezGeneIdB, tumorType, evidenceType, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<IndicatorQueryResp>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for annotateStructuralVariantsPostUsingPOST
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call annotateStructuralVariantsPostUsingPOSTCall(List<AnnotateStructuralVariantQuery> body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/annotate/structuralVariants";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call annotateStructuralVariantsPostUsingPOSTValidateBeforeCall(List<AnnotateStructuralVariantQuery> body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling annotateStructuralVariantsPostUsingPOST(Async)");
        }
        

        com.squareup.okhttp.Call call = annotateStructuralVariantsPostUsingPOSTCall(body, progressListener, progressRequestListener);
        return call;

    }

    /**
     * annotateStructuralVariantsPost
     * Annotate structural variants.
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @return List&lt;IndicatorQueryResp&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<IndicatorQueryResp> annotateStructuralVariantsPostUsingPOST(List<AnnotateStructuralVariantQuery> body) throws ApiException {
        ApiResponse<List<IndicatorQueryResp>> resp = annotateStructuralVariantsPostUsingPOSTWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * annotateStructuralVariantsPost
     * Annotate structural variants.
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @return ApiResponse&lt;List&lt;IndicatorQueryResp&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<IndicatorQueryResp>> annotateStructuralVariantsPostUsingPOSTWithHttpInfo(List<AnnotateStructuralVariantQuery> body) throws ApiException {
        com.squareup.okhttp.Call call = annotateStructuralVariantsPostUsingPOSTValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<List<IndicatorQueryResp>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * annotateStructuralVariantsPost (asynchronously)
     * Annotate structural variants.
     * @param body List of queries. Please see swagger.json for request body format. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call annotateStructuralVariantsPostUsingPOSTAsync(List<AnnotateStructuralVariantQuery> body, final ApiCallback<List<IndicatorQueryResp>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = annotateStructuralVariantsPostUsingPOSTValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<IndicatorQueryResp>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
