/*
 * OncoKB Private APIs
 * These endpoints are for private use only.
 *
 * OpenAPI spec version: v1.2.1
 * Contact: contact@oncokb.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.oncokb.client;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.oncokb.client.Article;
import org.oncokb.client.Gene;
import org.threeten.bp.OffsetDateTime;

/**
 * GeneEvidence
 */

public class GeneEvidence {
  @SerializedName("articles")
  private List<Article> articles = null;

  @SerializedName("desc")
  private String desc = null;

  @SerializedName("evidenceId")
  private Integer evidenceId = null;

  /**
   * Gets or Sets evidenceType
   */
  @JsonAdapter(EvidenceTypeEnum.Adapter.class)
  public enum EvidenceTypeEnum {
    GENE_SUMMARY("GENE_SUMMARY"),
    
    MUTATION_SUMMARY("MUTATION_SUMMARY"),
    
    TUMOR_TYPE_SUMMARY("TUMOR_TYPE_SUMMARY"),
    
    GENE_TUMOR_TYPE_SUMMARY("GENE_TUMOR_TYPE_SUMMARY"),
    
    PROGNOSTIC_SUMMARY("PROGNOSTIC_SUMMARY"),
    
    DIAGNOSTIC_SUMMARY("DIAGNOSTIC_SUMMARY"),
    
    GENE_BACKGROUND("GENE_BACKGROUND"),
    
    ONCOGENIC("ONCOGENIC"),
    
    MUTATION_EFFECT("MUTATION_EFFECT"),
    
    VUS("VUS"),
    
    PROGNOSTIC_IMPLICATION("PROGNOSTIC_IMPLICATION"),
    
    DIAGNOSTIC_IMPLICATION("DIAGNOSTIC_IMPLICATION"),
    
    STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY("STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_SENSITIVITY"),
    
    STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE("STANDARD_THERAPEUTIC_IMPLICATIONS_FOR_DRUG_RESISTANCE"),
    
    INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY("INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_SENSITIVITY"),
    
    INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE("INVESTIGATIONAL_THERAPEUTIC_IMPLICATIONS_DRUG_RESISTANCE");

    private String value;

    EvidenceTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EvidenceTypeEnum fromValue(String text) {
      for (EvidenceTypeEnum b : EvidenceTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<EvidenceTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EvidenceTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EvidenceTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return EvidenceTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("evidenceType")
  private EvidenceTypeEnum evidenceType = null;

  @SerializedName("gene")
  private Gene gene = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("lastEdit")
  private OffsetDateTime lastEdit = null;

  @SerializedName("shortDesc")
  private String shortDesc = null;

  @SerializedName("status")
  private String status = null;

  public GeneEvidence articles(List<Article> articles) {
    this.articles = articles;
    return this;
  }

  public GeneEvidence addArticlesItem(Article articlesItem) {
    if (this.articles == null) {
      this.articles = new ArrayList<Article>();
    }
    this.articles.add(articlesItem);
    return this;
  }

   /**
   * Get articles
   * @return articles
  **/
  @ApiModelProperty(value = "")
  public List<Article> getArticles() {
    return articles;
  }

  public void setArticles(List<Article> articles) {
    this.articles = articles;
  }

  public GeneEvidence desc(String desc) {
    this.desc = desc;
    return this;
  }

   /**
   * Get desc
   * @return desc
  **/
  @ApiModelProperty(value = "")
  public String getDesc() {
    return desc;
  }

  public void setDesc(String desc) {
    this.desc = desc;
  }

  public GeneEvidence evidenceId(Integer evidenceId) {
    this.evidenceId = evidenceId;
    return this;
  }

   /**
   * Get evidenceId
   * @return evidenceId
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getEvidenceId() {
    return evidenceId;
  }

  public void setEvidenceId(Integer evidenceId) {
    this.evidenceId = evidenceId;
  }

  public GeneEvidence evidenceType(EvidenceTypeEnum evidenceType) {
    this.evidenceType = evidenceType;
    return this;
  }

   /**
   * Get evidenceType
   * @return evidenceType
  **/
  @ApiModelProperty(required = true, value = "")
  public EvidenceTypeEnum getEvidenceType() {
    return evidenceType;
  }

  public void setEvidenceType(EvidenceTypeEnum evidenceType) {
    this.evidenceType = evidenceType;
  }

  public GeneEvidence gene(Gene gene) {
    this.gene = gene;
    return this;
  }

   /**
   * Get gene
   * @return gene
  **/
  @ApiModelProperty(value = "")
  public Gene getGene() {
    return gene;
  }

  public void setGene(Gene gene) {
    this.gene = gene;
  }

  public GeneEvidence id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public GeneEvidence lastEdit(OffsetDateTime lastEdit) {
    this.lastEdit = lastEdit;
    return this;
  }

   /**
   * Get lastEdit
   * @return lastEdit
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getLastEdit() {
    return lastEdit;
  }

  public void setLastEdit(OffsetDateTime lastEdit) {
    this.lastEdit = lastEdit;
  }

  public GeneEvidence shortDesc(String shortDesc) {
    this.shortDesc = shortDesc;
    return this;
  }

   /**
   * Get shortDesc
   * @return shortDesc
  **/
  @ApiModelProperty(value = "")
  public String getShortDesc() {
    return shortDesc;
  }

  public void setShortDesc(String shortDesc) {
    this.shortDesc = shortDesc;
  }

  public GeneEvidence status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeneEvidence geneEvidence = (GeneEvidence) o;
    return Objects.equals(this.articles, geneEvidence.articles) &&
        Objects.equals(this.desc, geneEvidence.desc) &&
        Objects.equals(this.evidenceId, geneEvidence.evidenceId) &&
        Objects.equals(this.evidenceType, geneEvidence.evidenceType) &&
        Objects.equals(this.gene, geneEvidence.gene) &&
        Objects.equals(this.id, geneEvidence.id) &&
        Objects.equals(this.lastEdit, geneEvidence.lastEdit) &&
        Objects.equals(this.shortDesc, geneEvidence.shortDesc) &&
        Objects.equals(this.status, geneEvidence.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(articles, desc, evidenceId, evidenceType, gene, id, lastEdit, shortDesc, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeneEvidence {\n");
    
    sb.append("    articles: ").append(toIndentedString(articles)).append("\n");
    sb.append("    desc: ").append(toIndentedString(desc)).append("\n");
    sb.append("    evidenceId: ").append(toIndentedString(evidenceId)).append("\n");
    sb.append("    evidenceType: ").append(toIndentedString(evidenceType)).append("\n");
    sb.append("    gene: ").append(toIndentedString(gene)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastEdit: ").append(toIndentedString(lastEdit)).append("\n");
    sb.append("    shortDesc: ").append(toIndentedString(shortDesc)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

