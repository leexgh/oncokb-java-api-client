/*
 * oncokb-transcript API
 * oncokb-transcript API documentation
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.oncokb.client;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.oncokb.client.EnsemblTranscript;
/**
 * TranscriptMatchResultVM
 */


public class TranscriptMatchResultVM {
  @SerializedName("note")
  private String note = null;

  @SerializedName("originalEnsemblTranscript")
  private EnsemblTranscript originalEnsemblTranscript = null;

  @SerializedName("targetEnsemblTranscript")
  private EnsemblTranscript targetEnsemblTranscript = null;

  public TranscriptMatchResultVM note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @Schema(description = "")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public TranscriptMatchResultVM originalEnsemblTranscript(EnsemblTranscript originalEnsemblTranscript) {
    this.originalEnsemblTranscript = originalEnsemblTranscript;
    return this;
  }

   /**
   * Get originalEnsemblTranscript
   * @return originalEnsemblTranscript
  **/
  @Schema(description = "")
  public EnsemblTranscript getOriginalEnsemblTranscript() {
    return originalEnsemblTranscript;
  }

  public void setOriginalEnsemblTranscript(EnsemblTranscript originalEnsemblTranscript) {
    this.originalEnsemblTranscript = originalEnsemblTranscript;
  }

  public TranscriptMatchResultVM targetEnsemblTranscript(EnsemblTranscript targetEnsemblTranscript) {
    this.targetEnsemblTranscript = targetEnsemblTranscript;
    return this;
  }

   /**
   * Get targetEnsemblTranscript
   * @return targetEnsemblTranscript
  **/
  @Schema(description = "")
  public EnsemblTranscript getTargetEnsemblTranscript() {
    return targetEnsemblTranscript;
  }

  public void setTargetEnsemblTranscript(EnsemblTranscript targetEnsemblTranscript) {
    this.targetEnsemblTranscript = targetEnsemblTranscript;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TranscriptMatchResultVM transcriptMatchResultVM = (TranscriptMatchResultVM) o;
    return Objects.equals(this.note, transcriptMatchResultVM.note) &&
        Objects.equals(this.originalEnsemblTranscript, transcriptMatchResultVM.originalEnsemblTranscript) &&
        Objects.equals(this.targetEnsemblTranscript, transcriptMatchResultVM.targetEnsemblTranscript);
  }

  @Override
  public int hashCode() {
    return Objects.hash(note, originalEnsemblTranscript, targetEnsemblTranscript);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TranscriptMatchResultVM {\n");
    
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    originalEnsemblTranscript: ").append(toIndentedString(originalEnsemblTranscript)).append("\n");
    sb.append("    targetEnsemblTranscript: ").append(toIndentedString(targetEnsemblTranscript)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
