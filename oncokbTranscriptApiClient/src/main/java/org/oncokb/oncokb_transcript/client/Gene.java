/*
 * oncokb-transcript API
 * oncokb-transcript API documentation
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.oncokb.oncokb_transcript.client;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.oncokb.oncokb_transcript.client.GeneAlias;
/**
 * Gene
 */


public class Gene {
  @SerializedName("entrezGeneId")
  private Integer entrezGeneId = null;

  @SerializedName("geneAliases")
  private List<GeneAlias> geneAliases = null;

  @SerializedName("hugoSymbol")
  private String hugoSymbol = null;

  @SerializedName("id")
  private Long id = null;

  public Gene entrezGeneId(Integer entrezGeneId) {
    this.entrezGeneId = entrezGeneId;
    return this;
  }

   /**
   * Get entrezGeneId
   * @return entrezGeneId
  **/
  @Schema(description = "")
  public Integer getEntrezGeneId() {
    return entrezGeneId;
  }

  public void setEntrezGeneId(Integer entrezGeneId) {
    this.entrezGeneId = entrezGeneId;
  }

  public Gene geneAliases(List<GeneAlias> geneAliases) {
    this.geneAliases = geneAliases;
    return this;
  }

  public Gene addGeneAliasesItem(GeneAlias geneAliasesItem) {
    if (this.geneAliases == null) {
      this.geneAliases = new ArrayList<GeneAlias>();
    }
    this.geneAliases.add(geneAliasesItem);
    return this;
  }

   /**
   * Get geneAliases
   * @return geneAliases
  **/
  @Schema(description = "")
  public List<GeneAlias> getGeneAliases() {
    return geneAliases;
  }

  public void setGeneAliases(List<GeneAlias> geneAliases) {
    this.geneAliases = geneAliases;
  }

  public Gene hugoSymbol(String hugoSymbol) {
    this.hugoSymbol = hugoSymbol;
    return this;
  }

   /**
   * Get hugoSymbol
   * @return hugoSymbol
  **/
  @Schema(description = "")
  public String getHugoSymbol() {
    return hugoSymbol;
  }

  public void setHugoSymbol(String hugoSymbol) {
    this.hugoSymbol = hugoSymbol;
  }

  public Gene id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Gene gene = (Gene) o;
    return Objects.equals(this.entrezGeneId, gene.entrezGeneId) &&
        Objects.equals(this.geneAliases, gene.geneAliases) &&
        Objects.equals(this.hugoSymbol, gene.hugoSymbol) &&
        Objects.equals(this.id, gene.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entrezGeneId, geneAliases, hugoSymbol, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Gene {\n");
    
    sb.append("    entrezGeneId: ").append(toIndentedString(entrezGeneId)).append("\n");
    sb.append("    geneAliases: ").append(toIndentedString(geneAliases)).append("\n");
    sb.append("    hugoSymbol: ").append(toIndentedString(hugoSymbol)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
